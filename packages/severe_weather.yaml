# This package is based off of https://gist.github.com/finity69x2/2b8336429008e9e783bdbf70905c9f6c
#
# This will allow several functions including a persistent pop-up notification on your HA front end, a notification to whichever notify service you use (I’m using just a mobile device notification in this example), and the TTS integration
# 
# You next need to find either your NWS Zone ID or County ID. It is better to use both ID's here.
# 
# You can find your Zone or County ID by going to https://alerts.weather.gov/, scroll down to your state and click on the “zone list” and/or "county list" then look for the entry for your county.
# 
# Once you have your desired ID you create a sensor, replacing my id (ILZ020, ILC093) with yours. The ID is case sensitive!
# 
# Then when you have your ID's, enter them into the configuration below.
# 
# Here are all the sections required in the configuration.yaml:

# These are my Zone and County IDs
# ILZ020
# ILC093
#
# These are some Zones and Counties that might have active alerts (for testing)
# PKZ816
# FLC027

rest:
  - resource: https://api.weather.gov/alerts/active/count
    scan_interval: 60
    headers:
      User-Agent: (ti@daleggetts.com, hass.home.daleggetts.com)
      Accept: application/ld+json
    sensor:
      - name: 'NWS Alert Count'
        value_template: >
          {% if value_json is defined and value_json.zones.ILZ020 is defined %}
            {{ value_json.zones.ILZ020 }}
          {% elif value_json is defined and value_json.zones.ILC093 is defined %}
            {{ value_json.zones.ILC093 }}
          {% else %}
            0
          {% endif %}
  - resource: https://api.weather.gov/alerts/active?zone=ILZ020,ILC093
    scan_interval: 60
    headers:
      User-Agent: (ti@daleggetts.com, hass.home.daleggetts.com)
      Accept: application/geo+json
    sensor:
      - name: 'NWS Alert Event 1'
        value_template: >
          {% if value_json.features[0] is defined %}
            {{ value_json['features'][0]['properties'].event }}
          {% else %}
            None
          {% endif %}
        json_attributes_path: "$.features[0].properties"
        json_attributes:
          - effective
          - onset
          - expires
          - ends
          - status
          - severity
          - certainty
          - urgency
          - description
          - areaDesc
      - name: 'NWS Alert Event 2'
        value_template: >
          {% if value_json.features[1] is defined %}
            {{ value_json['features'][1]['properties'].event }}
          {% else %}
            None
          {% endif %}
        json_attributes_path: "$.features[1].properties"
        json_attributes:
          - effective
          - onset
          - expires
          - ends
          - status
          - severity
          - certainty
          - urgency
          - description
          - areaDesc
      - name: 'NWS Alert Event 3'
        value_template: >
          {% if value_json.features[2] is defined %}
            {{ value_json['features'][2]['properties'].event }}
          {% else %}
            None
          {% endif %}
        json_attributes_path: "$.features[2].properties"
        json_attributes:
          - effective
          - onset
          - expires
          - ends
          - status
          - severity
          - certainty
          - urgency
          - description
          - areaDesc
      - name: 'NWS Alert Event 4'
        value_template: >
          {% if value_json.features[3] is defined %}
            {{ value_json['features'][3]['properties'].event }}
          {% else %}
            None
          {% endif %}
        json_attributes_path: "$.features[3].properties"
        json_attributes:
          - effective
          - onset
          - expires
          - ends
          - status
          - severity
          - certainty
          - urgency
          - description
          - areaDesc

script:
  ##
  # Text to Speech alerts for critical events
  #
  critical_nws_tts_alert_1:
    alias: 'Critical NWS TTS Alert 1'
    sequence:
      - action: tts.speak
        target:
          entity_id: tts.home_assistant_cloud
        data:
          media_player_entity_id: media_player.living_room_speaker
          message: "Attention!,,,Attention!,,,A {{ state_attr('sensor.nws_alert_event_1', 'severity') }}  weather alert has been issued. 
                    The National Weather Service has issued a {{ states.sensor.nws_alert_event_1.state }} for your area. 
                    It is in effect from {{ as_timestamp(state_attr('sensor.nws_alert_event_1', 'effective')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }} until
                    {{ as_timestamp(state_attr('sensor.nws_alert_event_1', 'expires')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }}."
      - delay: 00:00:10
      - action: tts.speak
        target:
          entity_id: tts.home_assistant_cloud
        data:
          media_player_entity_id: media_player.living_room_speaker
          message: "Attention!,,,Attention!,,,A {{ state_attr('sensor.nws_alert_event_1', 'severity') }}  weather alert has been issued. 
                    The National Weather Service has issued a {{ states.sensor.nws_alert_event_1.state }} for your area. 
                    It is in effect from {{ as_timestamp(state_attr('sensor.nws_alert_event_1', 'effective')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }} until
                    {{ as_timestamp(state_attr('sensor.nws_alert_event_1', 'expires')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }}."
  critical_nws_tts_alert_2:
    alias: 'Critical NWS TTS Alert 2'
    sequence:
      - action: tts.speak
        target:
          entity_id: tts.home_assistant_cloud
        data:
          media_player_entity_id: media_player.living_room_speaker
          message: "Attention!,,,Attention!,,,A {{ state_attr('sensor.nws_alert_event_2', 'severity') }}  weather alert has been issued. 
                    The National Weather Service has issued a {{ states.sensor.nws_alert_event_2.state }} for your area. 
                    It is in effect from {{ as_timestamp(state_attr('sensor.nws_alert_event_2', 'effective')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }} until
                    {{ as_timestamp(state_attr('sensor.nws_alert_event_2', 'expires')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }}."
      - delay: 00:00:10
      - action: tts.speak
        target:
          entity_id: tts.home_assistant_cloud
        data:
          media_player_entity_id: media_player.living_room_speaker
          message: "Attention!,,,Attention!,,,A {{ state_attr('sensor.nws_alert_event_2', 'severity') }}  weather alert has been issued. 
                    The National Weather Service has issued a {{ states.sensor.nws_alert_event_2.state }} for your area. 
                    It is in effect from {{ as_timestamp(state_attr('sensor.nws_alert_event_2', 'effective')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }} until
                    {{ as_timestamp(state_attr('sensor.nws_alert_event_2', 'expires')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }}."
  critical_nws_tts_alert_3:
    alias: 'Critical NWS TTS Alert 3'
    sequence:
      - action: tts.speak
        target:
          entity_id: tts.home_assistant_cloud
        data:
          media_player_entity_id: media_player.living_room_speaker
          message: "Attention!,,,Attention!,,,A {{ state_attr('sensor.nws_alert_event_3', 'severity') }}  weather alert has been issued. 
                    The National Weather Service has issued a {{ states.sensor.nws_alert_event_3.state }} for your area. 
                    It is in effect from {{ as_timestamp(state_attr('sensor.nws_alert_event_3', 'effective')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }} until
                    {{ as_timestamp(state_attr('sensor.nws_alert_event_3', 'expires')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }}."
      - delay: 00:00:10
      - action: tts.speak
        target:
          entity_id: tts.home_assistant_cloud
        data:
          media_player_entity_id: media_player.living_room_speaker
          message: "Attention!,,,Attention!,,,A {{ state_attr('sensor.nws_alert_event_3', 'severity') }}  weather alert has been issued. 
                    The National Weather Service has issued a {{ states.sensor.nws_alert_event_3.state }} for your area. 
                    It is in effect from {{ as_timestamp(state_attr('sensor.nws_alert_event_3', 'effective')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }} until
                    {{ as_timestamp(state_attr('sensor.nws_alert_event_3', 'expires')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }}."
  critical_nws_tts_alert_4:
    alias: 'Critical NWS TTS Alert 4'
    sequence:
      - action: tts.speak
        target:
          entity_id: tts.home_assistant_cloud
        data:
          media_player_entity_id: media_player.living_room_speaker
          message: "Attention!,,,Attention!,,,A {{ state_attr('sensor.nws_alert_event_4', 'severity') }}  weather alert has been issued. 
                    The National Weather Service has issued a {{ states.sensor.nws_alert_event_4.state }} for your area. 
                    It is in effect from {{ as_timestamp(state_attr('sensor.nws_alert_event_4', 'effective')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }} until
                    {{ as_timestamp(state_attr('sensor.nws_alert_event_4', 'expires')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }}."
      - delay: 00:00:10
      - action: tts.speak
        target:
          entity_id: tts.home_assistant_cloud
        data:
          media_player_entity_id: media_player.living_room_speaker
          message: "Attention!,,,Attention!,,,A {{ state_attr('sensor.nws_alert_event_4', 'severity') }}  weather alert has been issued. 
                    The National Weather Service has issued a {{ states.sensor.nws_alert_event_4.state }} for your area. 
                    It is in effect from {{ as_timestamp(state_attr('sensor.nws_alert_event_4', 'effective')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }} until
                    {{ as_timestamp(state_attr('sensor.nws_alert_event_4', 'expires')) | timestamp_custom('%A, %B %-d at %-I:%M %p') }}."

  ##
  # Mobile notifications with full volume for critical events
  #
  critical_nws_mobile_alert_1:
    alias: 'Critical NWS Mobile Alert 1'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_1', 'description') }}
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 1
  critical_nws_mobile_alert_2:
    alias: 'Critical NWS Mobile Alert 2'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_2', 'description') }}
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 1
  critical_nws_mobile_alert_3:
    alias: 'Critical NWS Mobile Alert 3'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_3', 'description') }}
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 1
  critical_nws_mobile_alert_4:
    alias: 'Critical NWS Mobile Alert 4'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_4', 'description') }}
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 1

  ##
  # Mobile notifications with no volume for critical events
  #
  critical_nws_mobile_notification_1:
    alias: 'Critical NWS Mobile Notification 1'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_1', 'description') }}
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0
  critical_nws_mobile_notification_2:
    alias: 'Critical NWS Mobile Notification 2'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_2', 'description') }}
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0
  critical_nws_mobile_notification_3:
    alias: 'Critical NWS Mobile Notification 3'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_3', 'description') }}
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0
  critical_nws_mobile_notification_4:
    alias: 'Critical NWS Mobile Notification 4'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_4', 'description') }}
          data:
            push:
              sound:
                name: default
                critical: 1
                volume: 0

  ##
  # Mobile notifications with for non-critical events
  #
  nws_mobile_notification_1:
    alias: 'NWS Mobile Notification 1'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_1', 'description') }}
  nws_mobile_notification_2:
    alias: 'NWS Mobile Notification 2'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_2', 'description') }}
  nws_mobile_notification_3:
    alias: 'NWS Mobile Notification 3'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_3', 'description') }}
  nws_mobile_notification_4:
    alias: 'NWS Mobile Notification 4'
    sequence:
      - action: notify.mobile_app_tis_iphone
        metadata: {}
        data:
          message: >
            {{ state_attr('sensor.nws_alert_event_4', 'description') }}

automation:
  - alias: 'Clear NWS Alert Pop Up'
    triggers:
      - trigger: state
        entity_id: sensor.nws_alert_count
        to: '0'
    actions:
      - action: persistent_notification.dismiss
        data:
          notification_id: "nws_alert_1"
      - action: persistent_notification.dismiss
        data:
          notification_id: "nws_alert_2"
      - action: persistent_notification.dismiss
        data:
          notification_id: "nws_alert_3"
      - action: persistent_notification.dismiss
        data:
          notification_id: "nws_alert_4"
  - alias: 'NWS Alert Pop Up 1'
    triggers:
      - trigger: state
        entity_id: sensor.nws_alert_count
    conditions:
      - condition: numeric_state
        entity_id: sensor.nws_alert_count
        above: 0
    actions:
        ## Create new persistant notifications in the UI for new alert
        #  and notify mobile devices appropriately.
      - parallel:    
        - if:
          - condition: not
            conditions:
              - condition: state
                entity_id: sensor.nws_alert_event_1
                state: None
          then:
            - parallel:
              - action: persistent_notification.create
                metadata: {}
                data:
                  notification_id: nws_alert_1
                  title: >
                    {{ states.sensor.nws_alert_event_1.state }}
                  message: >
                    {{ state_attr('sensor.nws_alert_event_1', 'description') }}
              - if:
                - condition: template
                  value_template: >
                    {{ is_state_attr('sensor.nws_alert_event_1', 'severity', 'Extreme') or
                       is_state_attr('sensor.nws_alert_event_1', 'severity', 'Severe') }}
                then:
                  - if:
                    - condition: template
                      value_template: >
                        {{ 'Tornado' in state_attr('sensor.nws_alert_event_1', 'description') and
                           'Warning' in state_attr('sensor.nws_alert_event_1', 'description') and
                           'Kendall' in state_attr('sensor.nws_alert_event_1', 'areadesc') }}
                    then:
                      - parallel:
                        - action: script.critical_nws_tts_alert_1
                        - action: script.critical_nws_mobile_alert_1
                    else:
                      - if:
                        - condition: and
                          conditions:
                          - condition: time
                            after: "05:30:00"
                            before: "22:00:00"
                          - condition: template
                            value_template: >
                              {{ is_state_attr('sensor.nws_alert_event_1', 'certainty', 'Observed') or
                                 is_state_attr('sensor.nws_alert_event_1', 'certainty', 'Likely') }}
                          - condition: template
                            value_template: >
                              {{ is_state_attr('sensor.nws_alert_event_1', 'urgency', 'Immediate') or
                                 is_state_attr('sensor.nws_alert_event_1', 'urgency', 'Expected') }}
                        then:
                          - action: script.critical_nws_mobile_alert_1
                        else:
                          - action: script.critical_nws_mobile_notification_1
                else:
                  - action: script.critical_nws_mobile_notification_1
        - if:
          - condition: not
            conditions:
              - condition: state
                entity_id: sensor.nws_alert_event_2
                state: None
          then:
            - parallel:
              - action: persistent_notification.create
                metadata: {}
                data:
                  notification_id: nws_alert_2
                  title: >
                    {{ states.sensor.nws_alert_event_2.state }}
                  message: >
                    {{ state_attr('sensor.nws_alert_event_2', 'description') }}
              - if:
                - condition: template
                  value_template: >
                    {{ is_state_attr('sensor.nws_alert_event_2', 'severity', 'Extreme') or
                       is_state_attr('sensor.nws_alert_event_2', 'severity', 'Severe') }}
                then:
                  - if:
                    - condition: template
                      value_template: >
                        {{ 'Tornado' in state_attr('sensor.nws_alert_event_2', 'description') and
                           'Warning' in state_attr('sensor.nws_alert_event_2', 'description') and
                           'Kendall' in state_attr('sensor.nws_alert_event_2', 'areadesc') }}
                    then:
                      - parallel:
                        - action: script.critical_nws_tts_alert_2
                        - action: script.critical_nws_mobile_alert_2
                    else:
                      - if:
                        - condition: and
                          conditions:
                          - condition: time
                            after: "05:30:00"
                            before: "22:00:00"
                          - condition: template
                            value_template: >
                              {{ is_state_attr('sensor.nws_alert_event_2', 'certainty', 'Observed') or
                                 is_state_attr('sensor.nws_alert_event_2', 'certainty', 'Likely') }}
                          - condition: template
                            value_template: >
                              {{ is_state_attr('sensor.nws_alert_event_2', 'urgency', 'Immediate') or
                                 is_state_attr('sensor.nws_alert_event_2', 'urgency', 'Expected') }}
                        then:
                          - action: script.critical_nws_mobile_alert_2
                        else:
                          - action: script.critical_nws_mobile_notification_2
                else:
                  - action: script.critical_nws_mobile_notification_2
        - if:
          - condition: not
            conditions:
              - condition: state
                entity_id: sensor.nws_alert_event_3
                state: None
          then:
            - parallel:
              - action: persistent_notification.create
                metadata: {}
                data:
                  notification_id: nws_alert_3
                  title: >
                    {{ states.sensor.nws_alert_event_3.state }}
                  message: >
                    {{ state_attr('sensor.nws_alert_event_3', 'description') }}
              - if:
                - condition: template
                  value_template: >
                    {{ is_state_attr('sensor.nws_alert_event_3', 'severity', 'Extreme') or
                       is_state_attr('sensor.nws_alert_event_3', 'severity', 'Severe') }}
                then:
                  - if:
                    - condition: template
                      value_template: >
                        {{ 'Tornado' in state_attr('sensor.nws_alert_event_3', 'description') and
                           'Warning' in state_attr('sensor.nws_alert_event_3', 'description') and
                           'Kendall' in state_attr('sensor.nws_alert_event_3', 'areadesc') }}
                    then:
                      - parallel:
                        - action: script.critical_nws_tts_alert_3
                        - action: script.critical_nws_mobile_alert_3
                    else:
                      - if:
                        - condition: and
                          conditions:
                          - condition: time
                            after: "05:30:00"
                            before: "22:00:00"
                          - condition: template
                            value_template: >
                              {{ is_state_attr('sensor.nws_alert_event_3', 'certainty', 'Observed') or
                                 is_state_attr('sensor.nws_alert_event_3', 'certainty', 'Likely') }}
                          - condition: template
                            value_template: >
                              {{ is_state_attr('sensor.nws_alert_event_3', 'urgency', 'Immediate') or
                                 is_state_attr('sensor.nws_alert_event_3', 'urgency', 'Expected') }}
                        then:
                          - action: script.critical_nws_mobile_alert_3
                        else:
                          - action: script.critical_nws_mobile_notification_3
                else:
                  - action: script.critical_nws_mobile_notification_3
        - if:
          - condition: not
            conditions:
              - condition: state
                entity_id: sensor.nws_alert_event_4
                state: None
          then:
            - parallel:
              - action: persistent_notification.create
                metadata: {}
                data:
                  notification_id: nws_alert_4
                  title: >
                    {{ states.sensor.nws_alert_event_4.state }}
                  message: >
                    {{ state_attr('sensor.nws_alert_event_4', 'description') }}
              - if:
                - condition: template
                  value_template: >
                    {{ is_state_attr('sensor.nws_alert_event_4', 'severity', 'Extreme') or
                       is_state_attr('sensor.nws_alert_event_4', 'severity', 'Severe') }}
                then:
                  - if:
                    - condition: template
                      value_template: >
                        {{ 'Tornado' in state_attr('sensor.nws_alert_event_4', 'description') and
                           'Warning' in state_attr('sensor.nws_alert_event_4', 'description') and
                           'Kendall' in state_attr('sensor.nws_alert_event_4', 'areadesc') }}
                    then:
                      - parallel:
                        - action: script.critical_nws_tts_alert_4
                        - action: script.critical_nws_mobile_alert_4
                    else:
                      - if:
                        - condition: and
                          conditions:
                          - condition: time
                            after: "05:30:00"
                            before: "22:00:00"
                          - condition: template
                            value_template: >
                              {{ is_state_attr('sensor.nws_alert_event_4', 'certainty', 'Observed') or
                                 is_state_attr('sensor.nws_alert_event_4', 'certainty', 'Likely') }}
                          - condition: template
                            value_template: >
                              {{ is_state_attr('sensor.nws_alert_event_4', 'urgency', 'Immediate') or
                                 is_state_attr('sensor.nws_alert_event_4', 'urgency', 'Expected') }}
                        then:
                          - action: script.critical_nws_mobile_alert_4
                        else:
                          - action: script.critical_nws_mobile_notification_4
                else:
                  - action: script.critical_nws_mobile_notification_4
          
# I created two announcements so that a minor event won't wake you up in the middle of the night.
# 
# You’ll notice I repeat the announcement twice in case the first announcement doesn’t wake you up.
# 
# And I haven’t worked out the volume setting part yet. If anyone has any working solutions feel free to let me know.
# 
# The script above generates a persistent notification pop-up.
